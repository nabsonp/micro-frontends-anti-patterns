{
  "name": "Mega Frontend",
  "alsoKnownAs": "",
  "category": "Intra-frontend",
  "problem": {
    "text": "A single micro frontend takes on multiple responsibilities or concerns that should be separated.",
    "image": ""
  },
  "symptomsAndConsequences": "This often happens when an MFE includes several screens or unrelated fragments, resulting in a bloated unit.",
  "solution": {
    "text": "Each micro frontend should focus on a specific subdomain of the application. Reevaluate and decompose large MFEs into smaller, more specialized units based on domain concerns.",
    "image": ""
  },
  "resultingContext": "Development teams collaborate closely with product teams to gain a clear understanding of domain boundaries and reflect them in the systemâ€™s architecture.",
  "example": {
    "text": "An e-commerce system is decomposed into just two MFEs, with mfe-users related to users and mfe-shopping related to products and purchases. The latter MFE includes screens that display product listings, product details, purchase confirmations, and purchase history. Decomposing the mfe-shopping into at least two MFEs is necessary: one containing the product listing and product details screens, belonging to the product domain; and another containing the confirmation and purchase history screens, belonging to the purchase domain.",
    "image": "mega-frontend-example.png"
  },
  "notes": "When redesigning the architecture, be careful to not create Nano Frontends. Additionally, analyze whether you should be implementing MFEs at all and not fall into the Micro Frontends as the Goal Anti-pattern.",
  "relatedAntiPatterns": [
    {
      "title": "Nano Frontend"
    },
    {
      "title": "Micro Frontends as the Goal"
    }
  ],
  "references": [
    {
      "title": "A Catalog of Micro Frontends Anti-patterns",
      "href": "https://doi.ieeecomputersociety.org/10.1109/ICSE55347.2025.00079"
    }
  ]
}
